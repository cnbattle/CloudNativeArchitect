version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    restart: always
    command: 
      - --api.insecure=true
      - --api.dashboard=true
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      # 启用 docker swarmMode
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmMode=true
      # 启用 metrics
      - --metrics.prometheus=true
      - --entryPoints.metrics.address=:8082
      # 启用 prometheus
      - --metrics.prometheus.entryPoint=metrics
      - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --metrics.prometheus.addrouterslabels=true
      # 启用 Jaeger
      - --tracing.jaeger=true
      - --tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling
      - --tracing.jaeger.samplingType=const
      - --tracing.jaeger.samplingParam=1.0
      - --tracing.jaeger.localAgentHostPort=jaeger:6831
      - --tracing.jaeger.gen128Bit
      - --tracing.jaeger.propagation=jaeger
      - --tracing.jaeger.disableAttemptReconnecting=true
      # 访问日志
      - --accesslog.filepath=/data/access.log
      - --accesslog.bufferingsize=100
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:8080:8080"
      - "0.0.0.0:8082:8082"
    volumes:
      # sync the time
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - traefik_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik

  prometheus:
    image: prom/prometheus
    restart: always
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    deploy:
      replicas: 1
      endpoint_mode: dnsrr
      placement:
        constraints:
          - "node.role==manager"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus-192-168-33-11.nip.io`)"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.http.routers.prometheus.entrypoints=web"
    networks:
      - traefik

  grafana:
    image: grafana/grafana-enterprise
    restart: always
    deploy:
      replicas: 1
      endpoint_mode: dnsrr
      placement:
        constraints:
          - "node.role==manager"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana-192-168-33-11.nip.io`)"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana.entrypoints=web"
    networks:
      - traefik

  jaeger:
    image: jaegertracing/all-in-one:1.25
    restart: always
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: ":9411"
    deploy:
      replicas: 1
      # endpoint_mode: dnsrr
      placement:
        constraints:
          - "node.role==manager"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jaeger.rule=Host(`jaeger-192-168-33-11.nip.io`)"
        - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
        - "traefik.http.routers.jaeger.entrypoints=web"
    networks:
      - traefik

configs:
  prometheus_config:
    external: true

networks:
  traefik:
    external: true

volumes:
  traefik_data: