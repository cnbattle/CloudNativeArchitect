version: '3.9'

services:
  traefik:
    image: traefik:v2.10
    restart: always
    command: 
      # 避免 Traefik 进行数据上报
      - --global.sendanonymoususage=false
      - --global.checknewversion=false
      - --api.disableDashboardAd=true
      
      - --ping=true
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.email=traefik@cnbattle.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      # 调试模式
      # - --api.debug=true
      # - --log.level=DEBUG
    ports:
      - "80:80"
      - "443:443"
    labels:

      - "traefik.http.middlewares.cnbattle-auth.basicauth.users=cnbattle:$$apr1$$kft8mcp2$$x0xzpLaJbTA6PuERAPkGu1"
      - "traefik.http.middlewares.dev-auth.basicauth.users=dev:$$apr1$$0mdgj2tf$$0rTvSJnC8z01c5xLQypHk0"
      
      - "traefik.http.middlewares.cors.headers.customResponseHeaders.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.cors.headers.customResponseHeaders.Access-Control-Allow-Methods=*"
      - "traefik.http.middlewares.cors.headers.customResponseHeaders.Access-Control-Allow-Headers=*"
      
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.middlewares=cnbattle-auth"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
    volumes:
      - trarfik_letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    # 健康检测
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy off localhost:8080/ping || exit 1"]
      interval: 3s
      retries: 10
    # 防止容器日志过大
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    networks:
      - infra

  mysql:
    image: mysql:8.1
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql/
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_DATABASE: "dev"
      MYSQL_USER: "dev"
      MYSQL_PASSWORD: "123456"
    command: [
      # 关闭二进制日志，主从 数据恢复功能将不可用, 与"--disable-log-bin"参数二选一
      "--skip-log-bin", 
      # 设置utf8字符集
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      # InnoDB 恢复 0正常启动，不强制恢复 1-6启用
      "--innodb-force-recovery=0",
      # 慢日志 x 秒
      "--long-query-time=5",
      "--slow-query-log=ON",
      "--slow-query-log-file=/var/lib/mysql_log/mysql-slow.log",
    ]
    ports:
      - "0.0.0.0:30601:3306"
    networks:
      - infra

  mysql-backup:
    image: databack/mysql-backup
    restart: always
    environment:
      DB_SERVER: "mysql"
      DB_PORT: "3306"
      DB_USER: "root"
      DB_PASS: "123456"
      DB_DUMP_BY_SCHEMA: "true"
      DB_DUMP_FREQ: "1440"
      DB_DUMP_TARGET: "s3://bucket-name/your-path"
      AWS_ACCESS_KEY_ID: "七牛key"
      AWS_SECRET_ACCESS_KEY: "七牛secret"
      AWS_DEFAULT_REGION: "七牛地区cn-south-1"
      AWS_ENDPOINT_URL: "七牛endpoint域名 https://s3-cn-south-1.qiniucs.com/"
    networks:
      - infra

  phpmyadmin:
    image: phpmyadmin:5.2
    restart: always
    environment:
      PMA_ARBITRARY: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.${DOMAIN}`)"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin.tls=true"
      - "traefik.http.routers.phpmyadmin.tls.certresolver=myresolver"
    depends_on:
      - mysql
    networks:
      - infra

  mongo:
    image: mongo:7.0
    restart: always
    volumes:
      - "mongo_data:/data/db"
      - "mongo_configdb:/data/configdb"
    ports:
      - "0.0.0.0:30602:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: "123456"
    networks:
      - infra

  mongo-express:
    image: mongo-express:1.0
    restart: always
    depends_on:
      - mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.express.rule=Host(`express.${DOMAIN}`)"
      - "traefik.http.services.express.loadbalancer.server.port=8081"
      - "traefik.http.routers.express.entrypoints=websecure"
      - "traefik.http.routers.express.tls=true"
      - "traefik.http.routers.express.tls.certresolver=myresolver"
      - "traefik.http.routers.express.middlewares=cnbattle-auth"
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "123456"
      ME_CONFIG_OPTIONS_EDITORTHEME: "ambiance"
    networks:
      - infra

  redis:
    image: redis:7.2
    restart: always
    command: 
      - --requirepass "123456"
    ports:
      - "0.0.0.0:30603:6379"
    volumes:
      - redis_data:/data
    networks:
      - infra

  rediscommander:
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on:
      - redis
    environment:
      - HTTP_USER=root
      - HTTP_PASSWORD=123456
      # label:hostname:port:dbIndex:password
      - REDIS_HOSTS=docker-redis:redis:6379:0:123456 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rediscommander.rule=Host(`redis.${DOMAIN}`)"
      - "traefik.http.services.rediscommander.loadbalancer.server.port=8081"
      - "traefik.http.routers.rediscommander.entrypoints=websecure"
      - "traefik.http.routers.rediscommander.tls=true"
      - "traefik.http.routers.rediscommander.tls.certresolver=myresolver"
      - "traefik.http.routers.rediscommander.middlewares=cnbattle-auth"
    networks:
      - infra

  showdoc:
    image: star7th/showdoc:latest
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.showdoc.rule=Host(`doc.${DOMAIN}`)"
      - "traefik.http.services.showdoc.loadbalancer.server.port=80"
      - "traefik.http.routers.showdoc.entrypoints=websecure"
      - "traefik.http.routers.showdoc.tls=true"
      - "traefik.http.routers.showdoc.tls.certresolver=myresolver"
    volumes:
      - showdoc_data:/var/www/html
    networks:
      - infra
  
  nsqlookupd:
    image: nsqio/nsq:v1.2.1
    restart: always
    command: /nsqlookupd
    ports:
      - "0.0.0.0:30660:4160"
      - "0.0.0.0:30661:4161"
    networks:
      - infra
      
  nsqd:
    image: nsqio/nsq:v1.2.1
    command: /nsqd --data-path=/data --mem-queue-size=1000 --lookupd-tcp-address=nsqlookupd:4160
    restart: always
    volumes:
      - nsq_data:/data
    depends_on:
      - nsqlookupd
    ports:
      - "0.0.0.0:30605:4150"
      - "0.0.0.0:30606:4151"
    networks:
      - infra
  
  nsqadmin:
    image: nsqio/nsq:v1.2.1
    restart: always
    command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
    depends_on:
      - nsqd
      - nsqlookupd
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nsqadmin.rule=Host(`nsq.${DOMAIN}`)"
      - "traefik.http.services.nsqadmin.loadbalancer.server.port=4171"
      - "traefik.http.routers.nsqadmin.entrypoints=websecure"
      - "traefik.http.routers.nsqadmin.tls=true"
      - "traefik.http.routers.nsqadmin.tls.certresolver=myresolver"
      - "traefik.http.routers.nsqadmin.middlewares=cnbattle-auth"
    networks:
      - infra

  zinc:
    image: public.ecr.aws/zinclabs/zinc:0.2.3
    environment:
      DATA_PATH: "/data"
      FIRST_ADMIN_USER: "admin"
      FIRST_ADMIN_PASSWORD: "123456"
      ZINC_FIRST_ADMIN_USER: "admin"
      ZINC_FIRST_ADMIN_PASSWORD: "123456"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zinc.rule=Host(`zinc.${DOMAIN}`)"
      - "traefik.http.services.zinc.loadbalancer.server.port=4080"
      - "traefik.http.routers.zinc.entrypoints=websecure"
      - "traefik.http.routers.zinc.tls=true"
      - "traefik.http.routers.zinc.tls.certresolver=myresolver"
      - "traefik.http.routers.zinc.middlewares=cors"
    volumes:
      - zinc_data:/data
    networks:
      - infra

  minio:
    image: quay.io/minio/minio
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "123456"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.${DOMAIN}`)"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.tls.certresolver=myresolver"
      
      - "traefik.http.routers.file.rule=Host(`file.${DOMAIN}`)"
      - "traefik.http.routers.file.service=file"
      - "traefik.http.services.file.loadbalancer.server.port=9000"
      - "traefik.http.routers.file.entrypoints=websecure"
      - "traefik.http.routers.file.tls=true"
      - "traefik.http.routers.file.tls.certresolver=myresolver"
    ports:
      - "0.0.0.0:30690:9000"
    volumes:
      - minio_data:/data
    networks:
      - infra

volumes:
  trarfik_letsencrypt:
  minio_data:
  zinc_data:
  mysql_data:
  mongo_data:
  mongo_configdb:
  redis_data:
  nsq_data: 

networks:
  infra:
