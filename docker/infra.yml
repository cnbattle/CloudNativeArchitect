version: '3.9'

services:
  traefik:
    image: traefik:v2.6
    restart: always
    command: 
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:8080:8080"
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
    #   - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    #   - "traefik.http.routers.traefik.entrypoints=web"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - infra

  mysql:
    image: mysql:8.0
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql/
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: dev
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    command: >
      mysqld
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    ports:
      - "0.0.0.0:3306:3306"
    networks:
      - infra

  adminer:
    image: adminer
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.${DOMAIN}`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.http.routers.adminer.entrypoints=web"
    links:
      - mysql
    depends_on:
      - mysql
    ports:
      - "0.0.0.0:18080:8080"
    networks:
      - infra

  mongo:
    image: mongo:5.0
    restart: always
    volumes:
      - "mongo_data:/data/db"
      - "mongo_configdb:/data/configdb"
    ports:
      - "0.0.0.0:27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    networks:
      - infra

  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    links:
      - mongo
    ports:
      - "0.0.0.0:18082:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
      ME_CONFIG_OPTIONS_EDITORTHEME: "ambiance"
    networks:
      - infra

  redis:
    image: redis:6.2
    restart: always
    ports:
      - "0.0.0.0:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - infra

  rediscommander:
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "0.0.0.0:18081:8081"
    networks:
      - infra

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      DEFAULT_VHOST: "exchange_server"
      DEFAULT_USER: "rabbit"
      DEFAULT_PASS: "rabbit"
    ports:
      - "0.0.0.0:15672:15672"
      - "0.0.0.0:5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - infra

  nsqlookupd:
    image: nsqio/nsq:v1.2.1
    restart: always
    command: /nsqlookupd
    ports:
      - "0.0.0.0:4160:4160"
      - "0.0.0.0:4161:4161"
    networks:
      - infra

  nsqd:
    image: nsqio/nsq:v1.2.1
    command: /nsqd --data-path=/data --mem-queue-size=0 --lookupd-tcp-address=nsqlookupd:4160
    restart: always
    depends_on:
      - nsqlookupd
    volumes:
      - nsq_data:/data
    ports:
      - "0.0.0.0:4150:4150"
      - "0.0.0.0:4151:4151"
    networks:
      - infra
  
  nsqadmin:
    image: nsqio/nsq:v1.2.1
    restart: always
    command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
    depends_on:
      - nsqlookupd
    ports:
      - "0.0.0.0:4171:4171"
    networks:
      - infra

  clickhouse:
    container_name: clickhouse
    image: yandex/clickhouse-server:21.3
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ports:
      - "0.0.0.0:8123:8123"
      - "0.0.0.0:9000:9000"
      - "0.0.0.0:9009:9009"
      - "0.0.0.0:9004:9004"
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8123/ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - infra

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.1
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "0.0.0.0:9200:9200"
      - "0.0.0.0:9300:9300"
    networks:
      - infra

volumes:
  mysql_data:
  mongo_data:
  mongo_configdb:
  redis_data:
  rabbitmq_data:
  nsq_data:
  clickhouse_data:
  elasticsearch_data:

networks:
  infra:
